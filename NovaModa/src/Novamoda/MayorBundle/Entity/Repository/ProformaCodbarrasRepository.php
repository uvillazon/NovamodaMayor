<?php
/**
 * Created by PhpStorm.
 * User: uvillazon
 * Date: 07/10/2015
 * Time: 09:01
 */
namespace Novamoda\MayorBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Novamoda\MayorBundle\Entity\ProformaCodbarras;
use Novamoda\MayorBundle\Entity\Repository\BaseRepository;

/**
 * ProformasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProformaCodbarrasRepository extends BaseRepository
{
    public function guardarDetallesCodBarra($idProforma, $fila, $detalles)
    {
        $cnt = 0;
        $band = 0;
        try {
            foreach ($detalles as $detalle) {
                $det = new ProformaCodbarras();
                $det->setCodigobarra($detalle->codigobarra);
                $det->setCantidad($detalle->cantidad);
                $det->setTalla($detalle->talla);
                $det->setFila($fila);
                $det->setIdProforma($idProforma);
                $this->_em->persist($det);
                $cnt++;
                if (strlen($detalle->codigobarra) > 0) {
                    $band++;
                }
            }
            $repoDetalle = $this->_em->getRepository('NovamodaMayorBundle:DetallesProforma');
            $cliente = $repoDetalle->obtenerValorPorEncabezado($idProforma, $fila, "CLIENTE");
            $vendedor = $repoDetalle->obtenerValorPorEncabezado($idProforma, $fila, "VENDEDOR");
            if (strlen($cliente) > 0 && strlen($vendedor) > 0) {
                if ($cnt == $band) {
                    $this->_em->flush();
                    return $idProforma;
                } else {

                    return "Falta Asignar Codigos de Barrra a tallas";
                }
            } else {
                return "No cuenta con Cliente ni Vendedor Asignado Por favor Intentar nuevamente";
            }

        } catch (\Exception $e) {
            return $e->getMessage();
        }
    }
}
