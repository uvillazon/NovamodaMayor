<?php
/**
 * Created by PhpStorm.
 * User: uvillazon
 * Date: 07/10/2015
 * Time: 09:01
 */
namespace Novamoda\MayorBundle\Entity\Repository;
use Doctrine\ORM\EntityRepository;
use Novamoda\MayorBundle\Entity\Kardexcajas;
use Novamoda\MayorBundle\Entity\Repository\BaseRepository;

/**
 * ProformasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class KardexcajasRepository extends BaseRepository
{
    public function guardarKardexCaja($datos){
        $result = new \Novamoda\MayorBundle\Model\RespuestaSP();
        try{
            $kardex = new Kardexcajas();
            $numero = $this->obtenerMaximo("numero") + 1;
            $kardex->setIdmodelo($datos["idmodelo"]);
            $kardex->setIdkardex("kar-".$numero);
            $kardex->setNumero($numero);
            $kardex->setSaldocantidad($datos["pares"]);
            $kardex->setTotalparescaja($datos["pares"]);
            $kardex->getNumerocajas("1.0");
            $kardex->setIdimpresion("13");
            $this->_em->persist($kardex);
            $this->_em->flush();
            $result->success = true;
            $result->id = $kardex->getIdkardex();
        }
        catch(\Exception $e){
            $result->success = false;
            $result->msg = $e->getMessage();
        }
        return $result;

    }

//    /**
//     * @param $data
//     * @return int|string
//     */
//    public function guardarProforma($data){
//        $result = "0";
//        try{
////            var_dump($data);
//            $date = date_create_from_format('d/m/Y', $data["fecha"]);
////            var_dump($date);
//            $proforma = new Proformas();
//            $proforma->setAlmacen($data["almacen"]);
//            $proforma->setMarca($data["marca"]);
//            $proforma->setEstado("NUEVO");
//            $proforma->setNombre($data["nombre"]);
//            $proforma->setNroFactura($data["nro_factura"]);
//            $proforma->setFecha($date);
////        $proforma->set
//            $this->_em->persist($proforma);
//            $this->_em->flush();
//            $result = $proforma->getIdProforma();
//        }
//        catch(\Exception $e){
//
////            var_dump($e);
//            $result = $e->getMessage();
//        }
//       return $result;
//    }
}
